type Event {
    id: ID!,
    title: String
    desc: String
    date: String
    from: String
    to: String
    locationId: ID!
    userId: ID!
    user: User
    participants: [Participant]
    location: Location
    createdAt: String
    updatedAt: String
}

input CreateEventInput {
    title: String!
    desc: String!
    date: String!
    from: String!
    to: String!
    locationId: ID!
    userId: ID!
}

input UpdateEventInput {
    title: String
    desc: String
    date: String
    from: String
    to: String
    locationId: ID
    userId: ID
}

type Query {
    events: [Event]
    eventCount: Int!
    eventsPagination(pageNumber: Int!, itemPerPage: Int!): [Event]
    event(id: ID!): Event
}

type Mutation {
    createEvent(data: CreateEventInput!) : Event
    updateEvent(id: ID!, data: UpdateEventInput!) : Event
    deleteEvent(id: ID!) : Event
    deleteAllEvents: Int
}

type Subscription {
    eventCreated: Event!
    eventCount: Int!
}